// Code generated by MockGen. DO NOT EDIT.
// Source: ./Folder.go

// Package mock_FolderDelivery is a generated GoMock package.
package mock_FolderDelivery

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// GetFolderList mocks base method
func (m *MockInterface) GetFolderList(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetFolderList", w, r)
}

// GetFolderList indicates an expected call of GetFolderList
func (mr *MockInterfaceMockRecorder) GetFolderList(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFolderList", reflect.TypeOf((*MockInterface)(nil).GetFolderList), w, r)
}

// GetLettersByFolder mocks base method
func (m *MockInterface) GetLettersByFolder(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetLettersByFolder", w, r)
}

// GetLettersByFolder indicates an expected call of GetLettersByFolder
func (mr *MockInterfaceMockRecorder) GetLettersByFolder(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLettersByFolder", reflect.TypeOf((*MockInterface)(nil).GetLettersByFolder), w, r)
}

// AddFolder mocks base method
func (m *MockInterface) AddFolder(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddFolder", w, r)
}

// AddFolder indicates an expected call of AddFolder
func (mr *MockInterfaceMockRecorder) AddFolder(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFolder", reflect.TypeOf((*MockInterface)(nil).AddFolder), w, r)
}

// AddLetterInFolder mocks base method
func (m *MockInterface) AddLetterInFolder(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddLetterInFolder", w, r)
}

// AddLetterInFolder indicates an expected call of AddLetterInFolder
func (mr *MockInterfaceMockRecorder) AddLetterInFolder(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddLetterInFolder", reflect.TypeOf((*MockInterface)(nil).AddLetterInFolder), w, r)
}

// RenameFolder mocks base method
func (m *MockInterface) RenameFolder(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RenameFolder", w, r)
}

// RenameFolder indicates an expected call of RenameFolder
func (mr *MockInterfaceMockRecorder) RenameFolder(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RenameFolder", reflect.TypeOf((*MockInterface)(nil).RenameFolder), w, r)
}

// RemoveLetterInFolder mocks base method
func (m *MockInterface) RemoveLetterInFolder(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveLetterInFolder", w, r)
}

// RemoveLetterInFolder indicates an expected call of RemoveLetterInFolder
func (mr *MockInterfaceMockRecorder) RemoveLetterInFolder(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveLetterInFolder", reflect.TypeOf((*MockInterface)(nil).RemoveLetterInFolder), w, r)
}

// RemoveFolder mocks base method
func (m *MockInterface) RemoveFolder(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RemoveFolder", w, r)
}

// RemoveFolder indicates an expected call of RemoveFolder
func (mr *MockInterfaceMockRecorder) RemoveFolder(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveFolder", reflect.TypeOf((*MockInterface)(nil).RemoveFolder), w, r)
}
