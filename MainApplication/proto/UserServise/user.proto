syntax = "proto3";

// protoc --go_out=plugins=grpc:. *.proto
package userService;

message Session{
  uint64 session = 1;
}

message User{
  string email = 1;
  string name = 2;
  string surname = 3;
  string password = 5;
  uint64 uid = 6;
}

message Email{
  string email = 1;
}

message Nothing {
  bool dummy = 1;
}

message Sid{
  string sid = 1;
}

message Uid{
  uint64 uid = 1;
}

message AddSessionMsg{
  string sid = 1;
  User user = 2;
}

message UpdateProfileMsg{
  User newUser = 1;
  string email = 2;
}

message Folder{
  string name=1;
  string Type=2;
  uint64 uid=3;
}

message FolderId{
  uint64 id=1;
}

message RenameFolderMsg{
  uint64 uid = 1;
  string Type=2;
  string oldName = 3;
  string newName = 4;
}

message FolderNameType{
  string name = 1;
  string type = 2;
}

message FolderList{
  repeated FolderNameType res  = 1;
}

message FolderUidType{
  uint64 uid = 1;
  string type = 2;
}

service UserService{
  rpc IsEmailExists(Email) returns(Nothing);
  rpc AddSession(AddSessionMsg) returns(Nothing);
  rpc AddUser(User) returns(Nothing);
  rpc GenerateSID(Nothing) returns(Sid);
  rpc GenerateUID(Nothing) returns(Uid);
  rpc GetUserByEmail(Email) returns (User);
  rpc GetUserByUID(Uid) returns (User);
  rpc IsOkSession(Sid) returns (Uid);
  rpc UpdateProfile(UpdateProfileMsg) returns(Nothing);
  rpc RemoveSession(Sid) returns (Uid);
  rpc GetSessionByUID(Uid) returns (Sid);
  rpc GetFolderId(Folder) returns(FolderId);
  rpc CreateFolder(Folder) returns(Nothing);
  rpc RenameFolder(RenameFolderMsg) returns(Nothing);
  rpc RemoveFolder(Folder) returns(FolderId);
  rpc GetFoldersList(FolderUidType) returns(FolderList);
}

