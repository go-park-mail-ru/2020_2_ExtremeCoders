// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: user.proto

// protoc --go_out=plugins=grpc:. *.proto

package letterService

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Lid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lid uint64 `protobuf:"varint,1,opt,name=lid,proto3" json:"lid,omitempty"`
}

func (x *Lid) Reset() {
	*x = Lid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lid) ProtoMessage() {}

func (x *Lid) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lid.ProtoReflect.Descriptor instead.
func (*Lid) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{0}
}

func (x *Lid) GetLid() uint64 {
	if x != nil {
		return x.Lid
	}
	return 0
}

type Letter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lid       uint64 `protobuf:"varint,1,opt,name=lid,proto3" json:"lid,omitempty"`
	Sender    string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver  string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Theme     string `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	Text      string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	DateTime  uint64 `protobuf:"varint,6,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	IsWatched bool   `protobuf:"varint,7,opt,name=isWatched,proto3" json:"isWatched,omitempty"`
}

func (x *Letter) Reset() {
	*x = Letter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Letter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Letter) ProtoMessage() {}

func (x *Letter) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Letter.ProtoReflect.Descriptor instead.
func (*Letter) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{1}
}

func (x *Letter) GetLid() uint64 {
	if x != nil {
		return x.Lid
	}
	return 0
}

func (x *Letter) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Letter) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *Letter) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *Letter) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Letter) GetDateTime() uint64 {
	if x != nil {
		return x.DateTime
	}
	return 0
}

func (x *Letter) GetIsWatched() bool {
	if x != nil {
		return x.IsWatched
	}
	return false
}

type DirName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirName uint64 `protobuf:"varint,1,opt,name=dirName,proto3" json:"dirName,omitempty"`
}

func (x *DirName) Reset() {
	*x = DirName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirName) ProtoMessage() {}

func (x *DirName) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirName.ProtoReflect.Descriptor instead.
func (*DirName) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{2}
}

func (x *DirName) GetDirName() uint64 {
	if x != nil {
		return x.DirName
	}
	return 0
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *Response) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type LetterListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Letter []*Letter `protobuf:"bytes,1,rep,name=letter,proto3" json:"letter,omitempty"`
	Result *Response `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LetterListResponse) Reset() {
	*x = LetterListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LetterListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LetterListResponse) ProtoMessage() {}

func (x *LetterListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LetterListResponse.ProtoReflect.Descriptor instead.
func (*LetterListResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{4}
}

func (x *LetterListResponse) GetLetter() []*Letter {
	if x != nil {
		return x.Letter
	}
	return nil
}

func (x *LetterListResponse) GetResult() *Response {
	if x != nil {
		return x.Result
	}
	return nil
}

type LetterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Letter *Letter   `protobuf:"bytes,1,opt,name=letter,proto3" json:"letter,omitempty"`
	Result *Response `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *LetterResponse) Reset() {
	*x = LetterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_file_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LetterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LetterResponse) ProtoMessage() {}

func (x *LetterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LetterResponse.ProtoReflect.Descriptor instead.
func (*LetterResponse) Descriptor() ([]byte, []int) {
	return file_file_proto_rawDescGZIP(), []int{5}
}

func (x *LetterResponse) GetLetter() *Letter {
	if x != nil {
		return x.Letter
	}
	return nil
}

func (x *LetterResponse) GetResult() *Response {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_file_proto protoreflect.FileDescriptor

var file_file_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x17, 0x0a, 0x03, 0x4c,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x6c, 0x69, 0x64, 0x22, 0xb2, 0x01, 0x0a, 0x06, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x22, 0x23, 0x0a, 0x07, 0x44, 0x69, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x64, 0x69, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x74, 0x0a, 0x12,
	0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x70, 0x0a, 0x0e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0xb5, 0x02, 0x0a, 0x0d, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x72, 0x52, 0x65, 0x63, 0x76, 0x12, 0x16, 0x2e,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x69,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x21, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x44, 0x69, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x16, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x69, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x21, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x53, 0x61,
	0x76, 0x65, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x1a,
	0x17, 0x2e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x64, 0x1a, 0x1d, 0x2e,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_file_proto_rawDescOnce sync.Once
	file_file_proto_rawDescData = file_file_proto_rawDesc
)

func file_file_proto_rawDescGZIP() []byte {
	file_file_proto_rawDescOnce.Do(func() {
		file_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_file_proto_rawDescData)
	})
	return file_file_proto_rawDescData
}

var file_file_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_file_proto_goTypes = []interface{}{
	(*Lid)(nil),                // 0: letterService.Lid
	(*Letter)(nil),             // 1: letterService.Letter
	(*DirName)(nil),            // 2: letterService.DirName
	(*Response)(nil),           // 3: letterService.Response
	(*LetterListResponse)(nil), // 4: letterService.LetterListResponse
	(*LetterResponse)(nil),     // 5: letterService.LetterResponse
}
var file_file_proto_depIdxs = []int32{
	1, // 0: letterService.LetterListResponse.letter:type_name -> letterService.Letter
	3, // 1: letterService.LetterListResponse.result:type_name -> letterService.Response
	1, // 2: letterService.LetterResponse.letter:type_name -> letterService.Letter
	3, // 3: letterService.LetterResponse.result:type_name -> letterService.Response
	2, // 4: letterService.LetterService.GetLettersByDirRecv:input_type -> letterService.DirName
	2, // 5: letterService.LetterService.GetLettersByDirSend:input_type -> letterService.DirName
	1, // 6: letterService.LetterService.SaveLetter:input_type -> letterService.Letter
	0, // 7: letterService.LetterService.WatchedLetter:input_type -> letterService.Lid
	4, // 8: letterService.LetterService.GetLettersByDirRecv:output_type -> letterService.LetterListResponse
	4, // 9: letterService.LetterService.GetLettersByDirSend:output_type -> letterService.LetterListResponse
	3, // 10: letterService.LetterService.SaveLetter:output_type -> letterService.Response
	5, // 11: letterService.LetterService.WatchedLetter:output_type -> letterService.LetterResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_file_proto_init() }
func file_file_proto_init() {
	if File_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Letter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LetterListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_file_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LetterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_proto_goTypes,
		DependencyIndexes: file_file_proto_depIdxs,
		MessageInfos:      file_file_proto_msgTypes,
	}.Build()
	File_file_proto = out.File
	file_file_proto_rawDesc = nil
	file_file_proto_goTypes = nil
	file_file_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LetterServiceClient is the client API for LetterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LetterServiceClient interface {
	GetLettersByDirRecv(ctx context.Context, in *DirName, opts ...grpc.CallOption) (*LetterListResponse, error)
	GetLettersByDirSend(ctx context.Context, in *DirName, opts ...grpc.CallOption) (*LetterListResponse, error)
	SaveLetter(ctx context.Context, in *Letter, opts ...grpc.CallOption) (*Response, error)
	WatchedLetter(ctx context.Context, in *Lid, opts ...grpc.CallOption) (*LetterResponse, error)
}

type letterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLetterServiceClient(cc grpc.ClientConnInterface) LetterServiceClient {
	return &letterServiceClient{cc}
}

func (c *letterServiceClient) GetLettersByDirRecv(ctx context.Context, in *DirName, opts ...grpc.CallOption) (*LetterListResponse, error) {
	out := new(LetterListResponse)
	err := c.cc.Invoke(ctx, "/letterService.LetterService/GetLettersByDirRecv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *letterServiceClient) GetLettersByDirSend(ctx context.Context, in *DirName, opts ...grpc.CallOption) (*LetterListResponse, error) {
	out := new(LetterListResponse)
	err := c.cc.Invoke(ctx, "/letterService.LetterService/GetLettersByDirSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *letterServiceClient) SaveLetter(ctx context.Context, in *Letter, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/letterService.LetterService/SaveLetter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *letterServiceClient) WatchedLetter(ctx context.Context, in *Lid, opts ...grpc.CallOption) (*LetterResponse, error) {
	out := new(LetterResponse)
	err := c.cc.Invoke(ctx, "/letterService.LetterService/WatchedLetter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LetterServiceServer is the server API for LetterService service.
type LetterServiceServer interface {
	GetLettersByDirRecv(context.Context, *DirName) (*LetterListResponse, error)
	GetLettersByDirSend(context.Context, *DirName) (*LetterListResponse, error)
	SaveLetter(context.Context, *Letter) (*Response, error)
	WatchedLetter(context.Context, *Lid) (*LetterResponse, error)
}

// UnimplementedLetterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLetterServiceServer struct {
}

func (*UnimplementedLetterServiceServer) GetLettersByDirRecv(context.Context, *DirName) (*LetterListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLettersByDirRecv not implemented")
}
func (*UnimplementedLetterServiceServer) GetLettersByDirSend(context.Context, *DirName) (*LetterListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLettersByDirSend not implemented")
}
func (*UnimplementedLetterServiceServer) SaveLetter(context.Context, *Letter) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveLetter not implemented")
}
func (*UnimplementedLetterServiceServer) WatchedLetter(context.Context, *Lid) (*LetterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WatchedLetter not implemented")
}

func RegisterLetterServiceServer(s *grpc.Server, srv LetterServiceServer) {
	s.RegisterService(&_LetterService_serviceDesc, srv)
}

func _LetterService_GetLettersByDirRecv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LetterServiceServer).GetLettersByDirRecv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/letterService.LetterService/GetLettersByDirRecv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LetterServiceServer).GetLettersByDirRecv(ctx, req.(*DirName))
	}
	return interceptor(ctx, in, info, handler)
}

func _LetterService_GetLettersByDirSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DirName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LetterServiceServer).GetLettersByDirSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/letterService.LetterService/GetLettersByDirSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LetterServiceServer).GetLettersByDirSend(ctx, req.(*DirName))
	}
	return interceptor(ctx, in, info, handler)
}

func _LetterService_SaveLetter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Letter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LetterServiceServer).SaveLetter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/letterService.LetterService/SaveLetter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LetterServiceServer).SaveLetter(ctx, req.(*Letter))
	}
	return interceptor(ctx, in, info, handler)
}

func _LetterService_WatchedLetter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Lid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LetterServiceServer).WatchedLetter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/letterService.LetterService/WatchedLetter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LetterServiceServer).WatchedLetter(ctx, req.(*Lid))
	}
	return interceptor(ctx, in, info, handler)
}

var _LetterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "letterService.LetterService",
	HandlerType: (*LetterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLettersByDirRecv",
			Handler:    _LetterService_GetLettersByDirRecv_Handler,
		},
		{
			MethodName: "GetLettersByDirSend",
			Handler:    _LetterService_GetLettersByDirSend_Handler,
		},
		{
			MethodName: "SaveLetter",
			Handler:    _LetterService_SaveLetter_Handler,
		},
		{
			MethodName: "WatchedLetter",
			Handler:    _LetterService_WatchedLetter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
